name: Rust CI and Release

on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: me_chat_server-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: me_chat_server-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: me_chat_server-macos-x86_64

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        target: ${{ matrix.target }}

    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Check code formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build
      run: |
        cargo build --release
        ls -la target/release/

    - name: Run tests
      run: cargo test --verbose

    - name: List build artifacts
      run: |
        echo "Build artifacts in target/release/:"
        ls -la target/release/

    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/') && success()
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          target/release/${{ matrix.binary }}
        draft: false
        prerelease: false
        generate_release_notes: true
